- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  with_items:
    - nginx_controller_tarball
    - nginx_controller_db_host
    - nginx_controller_db_port
    - nginx_controller_db_user
    - nginx_controller_db_password
    - nginx_controller_tsdb_volume_type
    - nginx_controller_smtp_host
    - nginx_controller_smtp_authentication
    - nginx_controller_smtp_use_tls
    - nginx_controller_noreply_address
    - nginx_controller_fqdn
    - nginx_controller_organization_name
    - nginx_controller_admin_firstname
    - nginx_controller_admin_lastname
    - nginx_controller_admin_email
    - nginx_controller_admin_password

- name: "Controller - Extracting"
  unarchive:
    src: "{{ nginx_controller_tarball }}"
    dest: "{{ nginx_controller_install_path | default(ansible_env.HOME) }}"
    creates: "{{ nginx_controller_install_path | default(ansible_env.HOME) }}/controller-installer"
    remote_src: "{{ nginx_controller_remote_source | default(true) }}"

- name: "Controller - Installing"
  shell: |
    # must complete in less than 10 minutes
    set timeout 600
    ./install.sh \
      --accept-license \
      --database-host '{{ nginx_controller_db_host }}' \
      --database-port '{{ nginx_controller_db_port | default(5432) }}' \
      --database-user '{{ nginx_controller_db_user }}' \
      --database-password '{{ nginx_controller_db_password }}' \
      --tsdb-volume-type '{{ nginx_controller_tsdb_volume_type }}' \
      --smtp-host '{{ nginx_controller_smtp_host }}' \
      --smtp-port '{{ nginx_controller_smtp_port | default(25) }}' \
      --smtp-authentication '{{ nginx_controller_smtp_authentication }}' \
      --smtp-use-tls '{{ nginx_controller_smtp_use_tls }}' \
      --noreply-address '{{ nginx_controller_noreply_address }}' \
      --fqdn '{{ nginx_controller_fqdn }}' \
      --organization-name '{{ nginx_controller_organization_name }}' \
      --admin-firstname '{{ nginx_controller_admin_firstname }}' \
      --admin-lastname '{{ nginx_controller_admin_lastname }}' \
      --admin-email '{{ nginx_controller_admin_email }}' \
      --admin-password '{{ nginx_controller_admin_password }}' \
      {{ (nginx_controller_tsdb_volume_type == "nfs") | ternary('--tsdb-nfs-path ' + nginx_controller_tsdb_nfs_path,'') }} \
      {{ (nginx_controller_tsdb_volume_type == "nfs") | ternary('--tsdb-nfs-host ' + nginx_controller_tsdb_nfs_host,'') }} \
      {{ (nginx_controller_tsdb_volume_type == "aws") | ternary('--tsdb-aws-volume-id ' + nginx_controller_tsdb_aws_volume_id,'') }} \
      {{ ((nginx_controller_apigw_cert is defined and nginx_controller_apigw_cert | length > 0) and (nginx_controller_apigw_key is defined and nginx_controller_apigw_key | length > 0) ) | ternary('--apigw-cert ' + nginx_controller_apigw_cert,'') }} \
      {{ ((nginx_controller_apigw_cert is defined and nginx_controller_apigw_cert | length > 0) and (nginx_controller_apigw_key is defined and nginx_controller_apigw_key | length > 0) ) | ternary('--apigw-key ' + nginx_controller_apigw_key,'') }} \
      {{ (nginx_controller_smtp_authentication | bool) | ternary('--smtp-user ' + nginx_controller_smtp_user,'') }} \
      {{ (nginx_controller_smtp_authentication | bool) | ternary('--smtp-password ' + nginx_controller_smtp_password,'') }} \
      {{ (nginx_controller_self_signed_cert | bool) | ternary('--self-signed-cert','') }} \
      {{ (nginx_controller_overwrite_existing_configs | bool) | ternary('--overwrite-existing-configs','') }} \
      {{ (nginx_controller_auto_install_docker | bool) | ternary('--auto-install-docker','') }}
  args:
    chdir: "{{ ansible_env.HOME }}/controller-installer"
    creates: /opt/nginx-controller/k8s-namespace.yaml