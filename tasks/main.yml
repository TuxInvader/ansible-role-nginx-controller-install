- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  with_items:
    - ctrl_tarball_src
    - ctrl_install_path
    - remote_src
    - db_host
    - db_port
    - db_user
    - db_password
    - tsdb_volume_type
    - smtp_host
    - smtp_port
    - smtp_authentication
    - smtp_use_tls
    - noreply_address
    - fqdn
    - organization_name
    - admin_firstname
    - admin_lastname
    - admin_email
    - admin_password

- name: "Controller - Extracting"
  unarchive:
    src: "{{ ctrl_tarball_src }}"
    dest: "{{ ctrl_install_path }}"
    creates: "{{ ctrl_install_path }}/controller-installer"
    remote_src: "{{ remote_src }}"

- name: "Controller - Installing"
  shell: |
    # must complete in less than 10 minutes
    set timeout 600
    ./install.sh \
      --accept-license \
      --database-host '{{ db_host }}' \
      --database-port '{{ db_port }}' \
      --database-user '{{ db_user }}' \
      --database-password '{{ db_password }}' \
      --tsdb-volume-type '{{ tsdb_volume_type }}' \
      --smtp-host '{{ smtp_host }}' \
      --smtp-port '{{ smtp_port }}' \
      --smtp-authentication '{{ smtp_authentication }}' \
      --smtp-use-tls '{{ smtp_use_tls }}' \
      --noreply-address '{{ noreply_address }}' \
      --fqdn '{{ fqdn }}' \
      --organization-name '{{ organization_name }}' \
      --admin-firstname '{{ admin_firstname }}' \
      --admin-lastname '{{ admin_lastname }}' \
      --admin-email '{{ admin_email }}' \
      --admin-password '{{ admin_password }}' \
      {{ (tsdb_volume_type == "nfs") | ternary('--tsdb-nfs-path ' + tsdb_nfs_path,'') }} \
      {{ (tsdb_volume_type == "nfs") | ternary('--tsdb-nfs-host ' + tsdb_nfs_host,'') }} \
      {{ (tsdb_volume_type == "aws") | ternary('--tsdb-aws-volume-id ' + tsdb_aws_volume_id,'') }} \
      {{ (apigw_cert != "" and apigw_key != "") | ternary('--apigw-cert ' + apigw_cert,'') }} \
      {{ (apigw_cert != "" and apigw_key != "") | ternary('--apigw-key ' + apigw_key,'') }} \
      {{ (smtp_authentication | bool) | ternary('--smtp-user ' + smtp_user,'') }} \
      {{ (smtp_authentication | bool) | ternary('--smtp-password ' + smtp_password,'') }} \
      {{ (self_signed_cert | bool) | ternary('--self-signed-cert','') }} \
      {{ (overwrite_existing_configs | bool) | ternary('--overwrite-existing-configs','') }} \
      {{ (auto_install_docker | bool) | ternary('--auto-install-docker','') }}
  args:
    chdir: "{{ ctrl_install_path }}/controller-installer"
    creates: /opt/nginx-controller/k8s-namespace.yaml